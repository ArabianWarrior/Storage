from decimal import Decimal
from typing import List, Optional
from src.repositories.base import BaseRepository
from src.models.costs import CostrsOrm
from sqlalchemy.ext.asyncio import AsyncSession


class CostsRepository(BaseRepository):
    def __init__(self, db: AsyncSession):
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –∏ –º–æ–¥–µ–ª—å —Ä–∞—Å—Ö–æ–¥–æ–≤
        super().__init__(db, CostrsOrm)

    # 1. –ü–æ–∏—Å–∫ –≤—Å–µ—Ö –∑–∞–ø–∏—Å–µ–π –ø–æ —Å–ø–æ—Å–æ–±—É –æ–ø–ª–∞—Ç—ã
    # –ë–µ—Ä–µ–º —Å–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã
    # –ò—â–µ–º –≤—Å–µ –∑–∞–ø–∏—Å–∏ —Å —Ç–∞–∫–∏–º —Å–ø–æ—Å–æ–±–æ–º –æ–ø–ª–∞—Ç—ã
    # –í–æ–∑–≤—Ä–∞—â–∞–µ–º —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –Ω–∞–π–¥–µ–Ω–Ω—ã—Ö –∑–∞–ø–∏—Å–µ–π
    async def get_by_payment_method(self, payment_method: str) -> List[CostrsOrm]:
        return await self.get_by_field("payment_method", payment_method)

    # 2. –ü–æ–∏—Å–∫ –≤—Å–µ—Ö –∑–∞–ø–∏—Å–µ–π –ø–æ –∏—Å—Ç–æ—á–Ω–∏–∫—É –æ–ø–ª–∞—Ç—ã
    # –ë–µ—Ä–µ–º –∏—Å—Ç–æ—á–Ω–∏–∫ –æ–ø–ª–∞—Ç—ã
    # –ò—â–µ–º –≤—Å–µ –∑–∞–ø–∏—Å–∏ —Å —Ç–∞–∫–∏–º –∏—Å—Ç–æ—á–Ω–∏–∫–æ–º
    # –í–æ–∑–≤—Ä–∞—â–∞–µ–º —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –Ω–∞–π–¥–µ–Ω–Ω—ã—Ö –∑–∞–ø–∏—Å–µ–π
    async def get_by_payment_source(self, payment_source: str) -> List[CostrsOrm]:
        return await self.get_by_field("payment_source", payment_source)

    # 3. –ü–æ–∏—Å–∫ –æ–¥–Ω–æ–π –∑–∞–ø–∏—Å–∏ –ø–æ —Å–æ–∑–¥–∞—Ç–µ–ª—é
    # –ë–µ—Ä–µ–º –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    # –ò—â–µ–º –≤—Å–µ –∑–∞–ø–∏—Å–∏ —Å —Ç–∞–∫–∏–º —Å–æ–∑–¥–∞—Ç–µ–ª–µ–º
    # –ï—Å–ª–∏ –Ω–∞—à–ª–∏ —Ö–æ—Ç—è –±—ã –æ–¥–Ω—É –∑–∞–ø–∏—Å—å ‚Äî –±–µ—Ä–µ–º –ø–µ—Ä–≤—É—é
    # –ï—Å–ª–∏ –Ω–µ –Ω–∞—à–ª–∏ ‚Äî –≤–æ–∑–≤—Ä–∞—â–∞–µ–º None
    async def get_created_by(self, created_by: str) -> Optional[CostrsOrm]:
        result = await self.get_by_field("created_by", created_by)
        return result[0] if result else None

    # 4. –ü–æ–∏—Å–∫ —Ä–∞—Å—Ö–æ–¥–æ–≤ –ø–æ –¥–∏–∞–ø–∞–∑–æ–Ω—É —Å—É–º–º—ã
    # –ë–µ—Ä–µ–º –º–∏–Ω–∏–º–∞–ª—å–Ω—É—é –∏ –º–∞–∫—Å–∏–º–∞–ª—å–Ω—É—é —Å—É–º–º—É
    # –ò—â–µ–º –≤—Å–µ –∑–∞–ø–∏—Å–∏, —É –∫–æ—Ç–æ—Ä—ã—Ö amount_rub –º–µ–∂–¥—É min –∏ max
    # –í–æ–∑–≤—Ä–∞—â–∞–µ–º —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –Ω–∞–π–¥–µ–Ω–Ω—ã—Ö –∑–∞–ø–∏—Å–µ–π
    async def get_amount_rub(self, min_amount: float, max_amount: float) -> List[CostrsOrm]:
        return await self.get_by_numeric_range("amount_rub", min_amount, max_amount)

    # 5. –ü–æ–∏—Å–∫ —Ä–∞—Å—Ö–æ–¥–æ–≤ –ø–æ –¥–∏–∞–ø–∞–∑–æ–Ω—É —Ä–∞—Å—Ö–æ–¥–∞
    # –ë–µ—Ä–µ–º –º–∏–Ω–∏–º–∞–ª—å–Ω—ã–π –∏ –º–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π —Ä–∞—Å—Ö–æ–¥
    # –ò—â–µ–º –≤—Å–µ –∑–∞–ø–∏—Å–∏, —É –∫–æ—Ç–æ—Ä—ã—Ö expense –º–µ–∂–¥—É min –∏ max
    # –í–æ–∑–≤—Ä–∞—â–∞–µ–º —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –Ω–∞–π–¥–µ–Ω–Ω—ã—Ö –∑–∞–ø–∏—Å–µ–π
    async def get_by_expense(self, min_expense: float, max_expense: float) -> List[CostrsOrm]:
        return await self.get_by_numeric_range("expense", min_expense, max_expense)

    # 6. –ü–æ–∏—Å–∫ —Ä–∞—Å—Ö–æ–¥–æ–≤ –∑–∞ –ø–µ—Ä–∏–æ–¥ –ø–æ –¥–∞—Ç–µ
    # –ë–µ—Ä–µ–º –ø–æ–ª–µ –¥–∞—Ç—ã, –¥–∞—Ç—É –Ω–∞—á–∞–ª–∞ –∏ –¥–∞—Ç—É –∫–æ–Ω—Ü–∞
    # –ò—â–µ–º –≤—Å–µ –∑–∞–ø–∏—Å–∏, —É –∫–æ—Ç–æ—Ä—ã—Ö –¥–∞—Ç–∞ –≤ —ç—Ç–æ–º –¥–∏–∞–ø–∞–∑–æ–Ω–µ
    # –í–æ–∑–≤—Ä–∞—â–∞–µ–º —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –Ω–∞–π–¥–µ–Ω–Ω—ã—Ö –∑–∞–ø–∏—Å–µ–π
    async def get_by_date_range(self, date_field, start_date, end_date) -> List[CostrsOrm]:
        return await super().get_by_date_range(date_field, start_date, end_date)

    # üîπ –ü—Ä–∞–≤–∏–ª–∞ –¥–ª—è –±—É–¥—É—â–∏—Ö —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–µ–≤:
    # - List[–ú–æ–¥–µ–ª—å] ‚Üí –∫–æ–≥–¥–∞ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç—Å—è –Ω–µ—Å–∫–æ–ª—å–∫–æ –∑–∞–ø–∏—Å–µ–π
    # - Optional[–ú–æ–¥–µ–ª—å] ‚Üí –∫–æ–≥–¥–∞ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç—Å—è –æ–¥–Ω–∞ –∑–∞–ø–∏—Å—å –∏–ª–∏ None
    # - result[0] if result else None ‚Üí –∏—Å–ø–æ–ª—å–∑—É–µ–º –¥–ª—è Optional, —á—Ç–æ–±—ã –≤–∑—è—Ç—å –ø–µ—Ä–≤—É—é –∑–∞–ø–∏—Å—å –∏–ª–∏ –≤–µ—Ä–Ω—É—Ç—å None
    # - –î–∏–∞–ø–∞–∑–æ–Ω—ã —á–∏—Å–µ–ª –∏ –¥–∞—Ç ‚Üí –≤—Å–µ–≥–¥–∞ List, –ø–æ—Ç–æ–º—É —á—Ç–æ –º–æ–∂–µ—Ç –±—ã—Ç—å –º–Ω–æ–≥–æ —Å–æ–≤–ø–∞–¥–µ–Ω–∏–π
